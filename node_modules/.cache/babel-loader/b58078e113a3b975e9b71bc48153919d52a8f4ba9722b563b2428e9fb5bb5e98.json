{"ast":null,"code":"var _jsxFileName = \"C:\\\\01-starting-project 2\\\\src\\\\components\\\\UI\\\\Button\\\\Button.js\";\n// import React from 'react';\n\n// import './Button.css';\n\n// const Button = props => {\n//   return (\n//     <button type={props.type} className=\"button\" onClick={props.onClick}>\n//       {props.children}\n//     </button>\n//   );\n// };\n\n// export default Button;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  isActive\n}) {\n  // const [isActive, setIsActive] = useState(false);\n\n  // const toggleButton = () => {\n  //   setIsActive(!isActive);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isActive ? 'active-button' : 'inactive-button',\n      onClick: toggleButton,\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","isActive","children","className","onClick","toggleButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/01-starting-project 2/src/components/UI/Button/Button.js"],"sourcesContent":["// import React from 'react';\n\n// import './Button.css';\n\n// const Button = props => {\n//   return (\n//     <button type={props.type} className=\"button\" onClick={props.onClick}>\n//       {props.children}\n//     </button>\n//   );\n// };\n\n// export default Button;\n\nimport React, { useState } from 'react';\n\nfunction App({isActive}) {\n  // const [isActive, setIsActive] = useState(false);\n\n  // const toggleButton = () => {\n  //   setIsActive(!isActive);\n  // };\n\n  return (\n    <div>\n      <button className={isActive ? 'active-button' : 'inactive-button'} onClick={toggleButton}>\n        Add Goal\n        {/* {isActive ? 'Active' : 'Inactive'} Button */}\n      </button>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAC;EAACC;AAAQ,CAAC,EAAE;EACvB;;EAEA;EACA;EACA;;EAEA,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA;MAAQI,SAAS,EAAEF,QAAQ,GAAG,eAAe,GAAG,iBAAkB;MAACG,OAAO,EAAEC,YAAa;MAAAH,QAAA,EAAC;IAExF;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAACC,EAAA,GAhBQV,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}